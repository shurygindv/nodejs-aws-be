import jestPlugin from "serverless-jest-plugin";
import AWSMock from "aws-sdk-mock";
import AWS from "aws-sdk";

import path from "path";
import fs from "fs";

import * as mod from "./../handler";
// tests for getAllProducts
// Generated by serverless-jest-plugin

const lambdaWrapper = jestPlugin.lambdaWrapper;
const wrapped = lambdaWrapper.wrap(mod, { handler: "importsFileParser" });

jest.setTimeout(30000);

const testCsvFilePath = path.resolve(__dirname, "test.csv");

const record = () => ({
  s3: {
    object: {
      key: "uploaded/test.csv",
    },
  },
});

const validRequestBody = {
  Records: [record()],
};

describe("importsFileParser", () => {
  beforeEach(() => {
    AWSMock.setSDKInstance(AWS);
  });

  afterEach(() => {
    AWSMock.restore("S3");
  });

  it("response body have to defined", () => {
    return wrapped.run({}).then((response) => {
      expect(response).toBeDefined();
    });
  });

  it("should be pass scenario successfully", () => {
    const copyMock = jest.fn().mockImplementationOnce((_params, callback) => {
      callback(null, {});
    });

    const deleteMock = jest.fn().mockImplementationOnce((_params, callback) => {
      callback(null, {});
    });

    AWSMock.mock(
      "S3",
      "getObject",
      Buffer.from(fs.readFileSync(testCsvFilePath))
    );

    AWSMock.mock("S3", "copyObject", copyMock);
    AWSMock.mock("S3", "deleteObject", deleteMock);

    return wrapped.run(validRequestBody).then((_res) => {
      expect(copyMock.mock.calls.length).toBe(1);
      expect(deleteMock.mock.calls.length).toBe(1);
    });
  });
});
